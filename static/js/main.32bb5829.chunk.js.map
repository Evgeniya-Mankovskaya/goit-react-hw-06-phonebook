{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Section/Section.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","items","createReducer","actions","state","action","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ContactItem","onClick","className","s","item","button","type","connect","filterList","allContacts","normalizedFilter","toLowerCase","includes","getFilterList","dispatch","onDeleteContact","contactsActions","contactsList","map","Container","children","container","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","label","onChange","input","pattern","title","required","Component","Section","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.32bb5829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1EsPp\",\"contact\":\"ContactList_contact__WwL3Z\",\"button\":\"ContactList_button__2UFVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2L_Cd\",\"input\":\"Filter_input__2qiIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2cW0Z\"};","/* eslint-disable import/no-anonymous-default-export */\r\n\r\nimport { nanoid } from \"nanoid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"contacts/delete\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactItem = ({ name, number, onClick }) => (\n  <li className={s.item}>\n    <p className={s.contact}>\n      {name}: {number}\n    </p>\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      Delete\n    </button>\n  </li>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"./ContactItem\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst getFilterList = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const filterList = getFilterList(items, filter);\n  return { contacts: filterList };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            className={s.input}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\nexport default Section;\n","import { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Section from \"./components/Section/Section\";\nimport Filter from \"./components/Filter/Filter\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1PMoy\",\"input\":\"ContactForm_input__52hLS\",\"button\":\"ContactForm_button__aJvjT\"};"],"sourceRoot":""}